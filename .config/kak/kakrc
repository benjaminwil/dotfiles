add-highlighter global/ number-lines -hlcursor -min-digits 3 -separator "  "
add-highlighter global/ regex \h+$ 0:Error
add-highlighter global/ wrap -width 101 -indent -word -marker ' … '

colorscheme terminal

declare-user-mode ultra

hook global BufWritePre ^[^*].* %{
    try %{ execute-keys -draft \%s\h+$<ret>d }
}

# hook global InsertIdle .* %{ execute-keys "<esc>" }

hook global NormalKey .* %{ set-face window PrimaryCursor PrimaryCursor }

hook global WinCreate ^[^*].* %{
    add-highlighter \
        window/ number-lines -hlcursor -min-digits 3 -separator " "
    add-highlighter window/ wrap -width 101 -indent -word -marker ' … '
}

hook global WinSetOption filetype=(git-commit) %{
    set-option buffer autowrap_column 72
    autowrap-enable
}
hook global WinSetOption filetype=(ruby) %{ lsp-enable-window }

map global normal <space> ":enter-user-mode ultra <ret>" \
    -docstring "Enter Ultra user mode."

map global ultra b ":buffer <tab>"
map global ultra d ":connect tmux-repl-vertical kd <ret>"
map global ultra f ":connect tmux-repl-vertical kf <ret>"
map global ultra q "| fmt -w %opt{autowrap_column} <ret>"
map global ultra s ":connect tmux-repl-horizontal <ret>"
map global ultra v ":connect tmux-repl-vertical <ret>"
map global ultra w ":connect tmux-repl-window <ret>"

set-option -add global ui_options terminal_padding_char=;
set-option -add global ui_options terminal_assistant=none

set-option global autoinfo "onkey"
set-option global indentwidth 2
set-option global scrolloff 3,6
set-option global tabstop 2

set-option global modelinefmt ''
set-option -add global modelinefmt ' {{mode_info}} '
set-option -add global modelinefmt '╷ %val{bufname} ☞ %opt{filetype} ╷'
set-option -add global modelinefmt ' %val{cursor_char_column}∶?? '

# `kak-lsp`
eval %sh{ kak-lsp --kakoune --session $kak_session }

# `kcr`
evaluate-commands %sh{ kcr init kakoune }
