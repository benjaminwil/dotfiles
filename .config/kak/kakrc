# Load Kakounescripts distributed with Kakoune.
#
evaluate-commands %sh{
    find -L "$kak_runtime/autoload" -name "*.kak" -exec \
        sh -c 'echo "try %{ source $1 } \
             catch %{ echo -debug cannot autoload $1 }"' _ {} \;
}

# Initialize `kak-tree-sitter`.
#
eval %sh{ kak-tree-sitter -dks --session $kak_session }

# Initialize  `kak-lsp` and hooks for available LSPs.
#
eval %sh{
    command -v kak-lsp &>/dev/null &&
        kak-lsp --kakoune --session $kak_session
}
hook global WinSetOption filetype=(bash|c|cpp|go|ruby|sh) %{
    lsp-enable-window
    lsp-auto-hover-enable
}

# Other hooks.
#
hook global BufWritePre ^[^*].* %{
    # Kill trailing whitespace.
    try %{ execute-keys -draft \%s\h+$<ret>d }
}
hook global FocusOut ^[^.git].* %{
    # Autosave.
    evaluate-commands %{ write-all }
}
hook global WinSetOption filetype=(git-commit) %{
    set-option buffer autowrap_column 72
    autowrap-enable
}
hook global WinSetOption \
    filetype=(?!git-commit)(?!markdown)(?!txt).* %{
        add-highlighter window/line-numbers number-lines \
            -hlcursor \
            -min-digits 3 \
            -separator "  "
}
hook global WinSetOption filetype=.{0} %{
    remove-highlighter window/line-numbers
}

# `smarttab`
#
hook global ModuleLoaded smarttab %{ set-option global softtabstop 2 }
hook global WinSetOption filetype=.* expandtab
hook global WinSetOption filetype=(makefile) smarttab

colorscheme terminal

# Create `ultra` user mode and assign some commonly-used keybindings to it.
#
declare-user-mode ultra
map global normal <space> ":enter-user-mode ultra <ret>" \
    -docstring "Enter Ultra user mode."

map global ultra B  ": buffer *<tab>"
map global ultra b  ": buffer <tab>"
map global ultra d  ": fetter tmux-repl-popup fetter-nnn-from-buffile <ret>"
map global ultra f  ": fetter tmux-repl-vertical fetter-rg-fzy <ret>"
map global ultra q  "| fmt -w %opt{autowrap_column} <ret>"
map global ultra m  ": fetter tmux-repl-vertical fetter-minitest-current-buffer <ret>"
map global ultra S  ": fetter tmux-repl-vertical fetter-rspec-spec-under-cursor <ret>"
map global ultra s  ": fetter tmux-repl-vertical fetter-rspec-current-buffer <ret>"
map global ultra w  ": fetter tmux-repl-window <ret>"
map global ultra ?  ": evaluate-commands %{ echo %val{buffile} } <ret>"
map global ultra $  ": fetter tmux-repl-window fetter-rspec <ret>"
map global ultra |  ": fetter tmux-repl-horizontal <ret>"
map global ultra \" ": fetter tmux-repl-vertical <ret>"

# Built-in options.
#
set-option -add global ui_options terminal_padding_char=;
set-option -add global ui_options terminal_assistant=none

set-option global autowrap_fmtcmd "fmt -w %opt{autowrap_column}"
set-option global autowrap_format_paragraph true
set-option global idle_timeout 500
set-option global indentwidth 2
set-option global scrolloff 3,6
set-option global tabstop 2
